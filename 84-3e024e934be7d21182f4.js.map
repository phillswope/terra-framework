{"version":3,"sources":["webpack:///./node_modules/terra-form-checkbox/lib/Checkbox.module.scss?8d29","webpack:///./node_modules/terra-form-checkbox/lib/CheckboxUtil.js","webpack:///./node_modules/terra-icon/lib/icon/IconTrash.js","webpack:///./node_modules/terra-icon/lib/icon/IconFolder.js","webpack:///./node_modules/terra-form-checkbox/lib/Checkbox.js","webpack:///./node_modules/terra-icon/lib/icon/IconPrinter.js","webpack:///./node_modules/terra-icon/lib/icon/IconSend.js","webpack:///./node_modules/terra-icon/lib/icon/IconTable.js","webpack:///./node_modules/terra-icon/lib/icon/IconFlowsheet.js","webpack:///./node_modules/terra-icon/lib/icon/IconVisualization.js","webpack:///./packages/terra-collapsible-menu-view/docs/README.md","webpack:///./packages/terra-collapsible-menu-view/src/CollapsibleMenuView.jsx","webpack:///./packages/terra-collapsible-menu-view/src/CollapsibleMenuViewItem.jsx","webpack:///./packages/terra-collapsible-menu-view/src/CollapsibleMenuViewItemGroup.jsx","webpack:///./packages/terra-collapsible-menu-view/src/CollapsibleMenuViewToggle.jsx","webpack:///./packages/terra-collapsible-menu-view/lib/terra-dev-site/doc/example/CollapsibleMenuViewDemo.js","webpack:///./packages/terra-collapsible-menu-view/src/terra-dev-site/doc/example/CollapsibleMenuViewDemo.jsx","webpack:///./packages/terra-collapsible-menu-view/lib/terra-dev-site/doc/collapsible-menu-view/CollapsibleMenuView.1.doc.js"],"names":["module","exports","CheckboxUtil","isConsideredMobileDevice","window","matchMedia","matches","DocumentTouch","document","navigator","maxTouchPoints","msMaxTouchPoints","Object","defineProperty","value","default","_react","_interopRequireDefault","_IconBase","obj","__esModule","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgIcon","customProps","attributes","createElement","d","displayName","defaultProps","_default","_propTypes","_bind","_CheckboxModule","_CheckboxUtil","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_defineProperty","configurable","writable","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","cx","bind","propTypes","checked","bool","defaultChecked","id","string","inputAttrs","disabled","isInline","isLabelHidden","labelText","node","isRequired","labelTextAttrs","name","onBlur","func","onChange","onFocus","undefined","Checkbox","_ref","controlInputAttrs","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","checkboxClasses","className","labelClasses","inputClasses","labelTextClasses","labelTextContainer","htmlFor","type","isCheckbox","require","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_IconTable","_IconFlowsheet","_IconVisualization","_IconSend","_IconPrinter","_IconFolder","_IconTrash","_terraCollapsibleMenuView","_React$Component","CollapsibleMenuViewDemo","props","_this","handleDisplayTypeChange","handleToggleOneOnChange","handleToggleTwoOnChange","state","toggle1Selection","toggle2Selection","displayType","event","isSelected","setState","selectedKey","Toggle","text","shouldCloseOnClick","isSelectable","isDisabled","Divider","Item","subMenuItems","ItemGroup","selectedKeys","icon","isIconOnly","Component","_terraDocTemplate","_README","_package","_CollapsibleMenuView","_CollapsibleMenuViewItem","_CollapsibleMenuViewItemGroup","_CollapsibleMenuViewToggle","_CollapsibleMenuViewDemo","_CollapsibleMenuViewDemo2","packageName","readme","srcPath","concat","examples","title","example","propsTables","componentName","componentSrc"],"mappings":"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","file":"84-3e024e934be7d21182f4.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox-module__checkbox___HI9Vi\",\"label\":\"Checkbox-module__label___3E8fg\",\"is-mobile\":\"Checkbox-module__is-mobile___frQvN\",\"native-input\":\"Checkbox-module__native-input___GvkXw\",\"label-text\":\"Checkbox-module__label-text___fY5lt\",\"is-hidden\":\"Checkbox-module__is-hidden___26Rqh\",\"is-disabled\":\"Checkbox-module__is-disabled___WSQKG\",\"is-inline\":\"Checkbox-module__is-inline___1jo0Z\"};","\"use strict\";\n\n// TODO: move this to utils package. Issue #1010.\nvar CheckboxUtil = function () {\n  var isConsideredMobileDevice = function isConsideredMobileDevice() {\n    return window.matchMedia('(max-width: 1024px)').matches && ('ontouchstart' in window // eslint-disable-next-line no-undef\n    || window.DocumentTouch && document instanceof DocumentTouch || navigator.maxTouchPoints > 0 // eslint-disable-line compat/compat\n    || navigator.msMaxTouchPoints > 0);\n  };\n\n  return {\n    isConsideredMobileDevice: isConsideredMobileDevice\n  };\n}();\n\nmodule.exports = CheckboxUtil;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M42.1 4H28V2a2 2 0 00-2-2h-4a2 2 0 00-2 2v2H5.9L5 11h38zM38 14H8.1l3.7 32a2.26 2.26 0 002.2 2h20a2.26 2.26 0 002.2-2l3.7-32z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconTrash\";\nSvgIcon.defaultProps = {\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\",\n  \"data-name\": \"Layer 1\"\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M45.8 12c1.2 0 2.2 1 2.2 2.2v26.7c0 1.2-1 2.2-2.2 2.2H2.2C1 43 0 42 0 40.8V7.2C0 6 1 5 2.2 5H15c1.4.1 2.7.6 3.7 1.6l3.8 3.9c1 1 2.3 1.5 3.7 1.6l19.4-.1h.2z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconFolder\";\nSvgIcon.defaultProps = {\n  \"className\": \"\",\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\",\n  \"isBidi\": true\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _CheckboxModule = _interopRequireDefault(require(\"./Checkbox.module.scss\"));\n\nvar _CheckboxUtil = _interopRequireDefault(require(\"./CheckboxUtil\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar cx = _bind.default.bind(_CheckboxModule.default);\n\nvar propTypes = {\n  /**\n    * Whether or not the checkbox element is checked. Use this to generate a controlled Checkbox Element.\n    */\n  checked: _propTypes.default.bool,\n\n  /**\n    * The checked property of the Input element. Use this to generate an uncontrolled Checkbox Element.\n    */\n  defaultChecked: _propTypes.default.bool,\n\n  /**\n    * The id of the checkbox.\n    */\n  id: _propTypes.default.string,\n\n  /**\n    * Additional attributes for the input object.\n    */\n  // eslint-disable-next-line react/forbid-prop-types\n  inputAttrs: _propTypes.default.object,\n\n  /**\n    * Whether the checkbox element is disabled.\n    */\n  disabled: _propTypes.default.bool,\n\n  /**\n    * Whether the checkbox element is inline.\n    */\n  isInline: _propTypes.default.bool,\n\n  /**\n    * Whether the label is hidden.\n    */\n  isLabelHidden: _propTypes.default.bool,\n\n  /**\n    * Text of the label.\n    */\n  labelText: _propTypes.default.node.isRequired,\n\n  /**\n    * Additional attributes for the text object.\n    */\n  // eslint-disable-next-line react/forbid-prop-types\n  labelTextAttrs: _propTypes.default.object,\n\n  /**\n    * Name attribute of the input.\n    */\n  name: _propTypes.default.string,\n\n  /**\n   * Function to trigger when focus is lost from the checkbox.\n   */\n  onBlur: _propTypes.default.func,\n\n  /**\n    * Function to trigger when user clicks on the checkbox. Provide a function to create a controlled input.\n    */\n  onChange: _propTypes.default.func,\n\n  /**\n   *  Function to trigger when user focuses on the checkbox.\n   */\n  onFocus: _propTypes.default.func,\n\n  /**\n    * The value of the input element.\n    */\n  value: _propTypes.default.string\n};\nvar defaultProps = {\n  checked: undefined,\n  defaultChecked: undefined,\n  id: undefined,\n  inputAttrs: {},\n  disabled: false,\n  isInline: false,\n  isLabelHidden: false,\n  labelTextAttrs: {},\n  name: null,\n  onBlur: undefined,\n  onChange: undefined,\n  onFocus: undefined,\n  value: undefined\n};\n\nvar Checkbox = function Checkbox(_ref) {\n  var checked = _ref.checked,\n      defaultChecked = _ref.defaultChecked,\n      inputAttrs = _ref.inputAttrs,\n      id = _ref.id,\n      disabled = _ref.disabled,\n      isInline = _ref.isInline,\n      isLabelHidden = _ref.isLabelHidden,\n      labelText = _ref.labelText,\n      labelTextAttrs = _ref.labelTextAttrs,\n      name = _ref.name,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      onFocus = _ref.onFocus,\n      value = _ref.value,\n      customProps = _objectWithoutProperties(_ref, [\"checked\", \"defaultChecked\", \"inputAttrs\", \"id\", \"disabled\", \"isInline\", \"isLabelHidden\", \"labelText\", \"labelTextAttrs\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"value\"]);\n\n  var controlInputAttrs = _objectSpread({}, inputAttrs);\n\n  if (checked !== undefined) {\n    controlInputAttrs.checked = checked;\n  } else {\n    controlInputAttrs.defaultChecked = defaultChecked;\n  }\n\n  var checkboxClasses = cx(['checkbox', {\n    'is-inline': isInline\n  }, customProps.className]);\n  var labelClasses = cx(['label', {\n    'is-disabled': disabled\n  }, {\n    'is-mobile': _CheckboxUtil.default.isConsideredMobileDevice()\n  }, labelTextAttrs.className]);\n  var inputClasses = cx(['native-input', inputAttrs.className]);\n  var labelTextClasses = cx(['label-text', {\n    'is-hidden': isLabelHidden\n  }, {\n    'is-mobile': _CheckboxUtil.default.isConsideredMobileDevice()\n  }]);\n  var labelTextContainer = null;\n\n  if (isLabelHidden) {\n    controlInputAttrs['aria-label'] = labelText;\n    labelTextContainer = _react.default.createElement(\"span\", _extends({}, labelTextAttrs, {\n      className: labelTextClasses\n    }));\n  } else {\n    labelTextContainer = _react.default.createElement(\"span\", _extends({}, labelTextAttrs, {\n      className: labelTextClasses\n    }), labelText);\n  }\n\n  return _react.default.createElement(\"div\", _extends({}, customProps, {\n    className: checkboxClasses\n  }), _react.default.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, _react.default.createElement(\"input\", _extends({}, controlInputAttrs, {\n    type: \"checkbox\",\n    id: id,\n    disabled: disabled,\n    name: name,\n    value: value,\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    className: inputClasses\n  })), labelTextContainer));\n};\n\nCheckbox.propTypes = propTypes;\nCheckbox.defaultProps = defaultProps;\nCheckbox.isCheckbox = true;\nvar _default = Checkbox;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M39.8 12H35V1.7c0-.9-.8-1.7-1.7-1.7H8.7C7.8 0 7 .8 7 1.7V12H2.2C1 12 0 13 0 14.2v19.7C.1 35.1 1 36 2.2 36H7v10.3c0 .9.8 1.7 1.7 1.7h24.6c.9 0 1.7-.8 1.7-1.7V36h4.8c1.2 0 2.2-1 2.2-2.2V14.2c0-1.2-1-2.2-2.2-2.2zM10 3h22v9H10V3zm22 42H10V29.9h22V45zm3.2-24C34 21 33 20 33 18.8s1-2.2 2.2-2.2 2.2 1 2.2 2.2c0 1.2-1 2.2-2.2 2.2z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconPrinter\";\nSvgIcon.defaultProps = {\n  \"viewBox\": \"0 0 42 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\"\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M47.2 24.9c1-.5 1-1.3 0-1.8L28 13.5 25 12c-.7-.3-2.9-1.5-3.9-2L1.9.4C.8-.1 0 .4 0 1.5V19c0 1.2.9 2.2 2.1 2.3L30.3 24c1.1.1 1.1.3 0 .4L2.1 27C.9 27.1 0 28 0 29.2v17.2c-.1.6.3 1.2.9 1.3.3 0 .6 0 .9-.2L21.1 38l3-1.5c.7-.3 2.9-1.5 3.9-2l19.2-9.6z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconSend\";\nSvgIcon.defaultProps = {\n  \"className\": \"\",\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\",\n  \"isBidi\": true\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M0 0v48h48V0zm31 9v10H18V9zm0 13v10H18V22zm3 0h11v10H34zm0-3V9h11v10zM3 9h12v10H3zm0 13h12v10H3zm0 23V35h12v10zm15 0V35h13v10zm16 0V35h11v10z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconTable\";\nSvgIcon.defaultProps = {\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\",\n  \"data-name\": \"Layer 1\"\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M0 0v48h48V0zm45 45H15V3h30z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconFlowsheet\";\nSvgIcon.defaultProps = {\n  \"className\": \"\",\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\",\n  \"data-name\": \"Layer 1\",\n  \"isBidi\": true\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M48 8v16h-6v-5.7L25.31 35l-4.56-4.56L9.18 42H48v6H0V0h6v36.7l14.75-14.76 4.56 4.56L37.82 14H32V8z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconVisualization\";\nSvgIcon.defaultProps = {\n  \"className\": \"\",\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\",\n  \"data-name\": \"Layer 1\",\n  \"isBidi\": true\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","export default \"# Terra Collapsible Menu View\\n\\nThe collapsible menu view is a mechanism that can be used in toolbar scenarios where actionable items will be displayed face-up and flex based on the space available. Any items that can not fit in the available space will be rolled into an ellipsis menu.\\n\\nCollapsibleMenuView.Item will flex between a button when displayed face-up and a Menu.Item when in a menu. An item can have an onClick action and/or contain menuItems that will be displayed in a menu when clicked (they will be displayed in a submenu if the item is rolled into the ellipsis menu)\\n\\nCollapsibleMenuView.Toggle will flex between a checkbox with a label when displayed face-up and a selectable Menu.Item when in a menu.\\n\\nCollapsibleMenuView.ItemGroup will flex between a button group when displayed face-up and a Menu.ItemGroup when rolled into the ellipsis menu. A selectable ItemGroup will have toggle style selection. An Item group that is not slectable will have it's children roll into the ellipsis menu as non selectable Menu.Items.\\n\\nCollapsibleMenuView.Divider will flex between a vertical divider when displayed face-up and a Menu.Divider when in a menu.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-collapsible-menu-view`\\n\\n<!-- AUTO-GENERATED-CONTENT:START Peer Dependencies -->\\n## Peer Dependencies\\n\\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\\n\\n| Peer Dependency | Version |\\n|-|-|\\n| react | ^16.8.5 |\\n| react-dom | ^16.8.5 |\\n| react-intl | ^2.8.0 |\\n\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n\\n## Usage\\n\\n```jsx\\nimport React from 'react';\\nimport IconTable from 'terra-icon/lib/icon/IconTable';\\nimport IconFlowsheet from 'terra-icon/lib/icon/IconFlowsheet';\\nimport IconVisualization from 'terra-icon/lib/icon/IconVisualization';\\nimport IconSend from 'terra-icon/lib/icon/IconSend';\\nimport IconPrinter from 'terra-icon/lib/icon/IconPrinter';\\nimport IconFolder from 'terra-icon/lib/icon/IconFolder';\\nimport IconTrash from 'terra-icon/lib/icon/IconTrash';\\nimport CollapsibleMenuView from 'terra-collapsible-menu-view';\\n\\nclass CollapsibleMenuViewDemo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleDisplayTypeChange = this.handleDisplayTypeChange.bind(this);\\n    this.handleToggleOneOnChange = this.handleToggleOneOnChange.bind(this);\\n    this.handleToggleTwoOnChange = this.handleToggleTwoOnChange.bind(this);\\n    this.state = {\\n      toggle1Selection: false,\\n      toggle2Selection: false,\\n      displayType: 'tableView',\\n    };\\n  }\\n\\n  handleToggleOneOnChange(event, isSelected) {\\n    this.setState({ toggle1Selection: isSelected });\\n  }\\n\\n  handleToggleTwoOnChange(event, isSelected) {\\n    this.setState({ toggle2Selection: isSelected });\\n  }\\n\\n  handleDisplayTypeChange(event, selectedKey) {\\n    this.setState({ displayType: selectedKey });\\n  }\\n\\n  render() {\\n    return (\\n      <CollapsibleMenuView>\\n        <CollapsibleMenuView.Toggle\\n          text=\\\"Toggle Item 1\\\"\\n          key=\\\"toggle1\\\"\\n          onChange={this.handleToggleOneOnChange}\\n          isSelected={this.state.toggle1Selection}\\n        />\\n        <CollapsibleMenuView.Toggle\\n          text=\\\"Toggle Item 2\\\"\\n          key=\\\"toggle2\\\"\\n          onChange={this.handleToggleTwoOnChange}\\n          isSelected={this.state.toggle2Selection}\\n        />\\n        <CollapsibleMenuView.Divider key=\\\"Divider1\\\" />\\n        <CollapsibleMenuView.Item\\n          text=\\\"Menu Button 1\\\"\\n          key=\\\"MenuButton1\\\"\\n          shouldCloseOnClick={false}\\n          subMenuItems={[\\n            <CollapsibleMenuView.Item text=\\\"Default Item 1\\\" key=\\\"defaultItem1\\\" />,\\n            <CollapsibleMenuView.Item text=\\\"Default Item 2\\\" key=\\\"defaultItem2\\\" />,\\n          ]}\\n        />\\n        <CollapsibleMenuView.Item\\n          text=\\\"Menu Button 2\\\"\\n          key=\\\"MenuButton 2\\\"\\n          shouldCloseOnClick={false}\\n          subMenuItems={[\\n            <CollapsibleMenuView.Item text=\\\"Default Item 1\\\" key=\\\"defaultItem1\\\" />,\\n            <CollapsibleMenuView.Item text=\\\"Default Item 2\\\" key=\\\"defaultItem2\\\" />,\\n          ]}\\n        />\\n        <CollapsibleMenuView.Divider key=\\\"Divider2\\\" />\\n        <CollapsibleMenuView.ItemGroup key=\\\"ViewTypeSelection\\\" onChange={this.handleDisplayTypeChange}>\\n          <CollapsibleMenuView.Item\\n            icon={<IconTable />}\\n            text=\\\"Table View\\\"\\n            key=\\\"tableView\\\"\\n            isIconOnly\\n            shouldCloseOnClick={false}\\n            isSelected={this.state.displayType === 'tableView'}\\n          />\\n          <CollapsibleMenuView.Item\\n            icon={<IconFlowsheet />}\\n            text=\\\"Expanded View\\\"\\n            key=\\\"expandedView\\\"\\n            isIconOnly\\n            shouldCloseOnClick={false}\\n            isSelected={this.state.displayType === 'expandedView'}\\n          />\\n          <CollapsibleMenuView.Item\\n            icon={<IconVisualization />}\\n            text=\\\"Trending View\\\"\\n            key=\\\"trendingView\\\"\\n            isIconOnly\\n            shouldCloseOnClick={false}\\n            isSelected={this.state.displayType === 'trendingView'}\\n          />\\n        </CollapsibleMenuView.ItemGroup>\\n        <CollapsibleMenuView.Divider key=\\\"Divider3\\\" />\\n        <CollapsibleMenuView.Item icon={<IconSend />} text=\\\"Send Message\\\" key=\\\"send\\\" isIconOnly />\\n        <CollapsibleMenuView.ItemGroup key=\\\"messageActionGroup\\\">\\n          <CollapsibleMenuView.Item icon={<IconPrinter />} text=\\\"Print Message\\\" key=\\\"print\\\" isIconOnly />\\n          <CollapsibleMenuView.Item icon={<IconFolder />} text=\\\"Move Message to Folder...\\\" key=\\\"move\\\" isIconOnly />\\n          <CollapsibleMenuView.Item icon={<IconTrash />} text=\\\"Trash Message\\\" key=\\\"trash\\\" isIconOnly />\\n        </CollapsibleMenuView.ItemGroup>\\n        <CollapsibleMenuView.Divider key=\\\"Divider4\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 1\\\" key=\\\"button1\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 2\\\" key=\\\"button2\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 3\\\" key=\\\"button3\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 4\\\" key=\\\"button4\\\" />\\n      </CollapsibleMenuView>\\n    );\\n  }\\n}\\n\\nexport default CollapsibleMenuViewDemo;\\n```\\n\\n## Component Features\\n\\n\\n * [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\\n * [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\\n * [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\\n * [LTR/RTL Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#ltr--rtl-support)\\n\"","export default \"import React from 'react';\\nimport ResizeObserver from 'resize-observer-polyfill';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames/bind';\\nimport { FormattedMessage } from 'react-intl';\\nimport CollapsibleMenuViewItem from './CollapsibleMenuViewItem';\\nimport CollapsibleMenuViewItemGroup from './CollapsibleMenuViewItemGroup';\\nimport CollapsibleMenuViewToggle from './CollapsibleMenuViewToggle';\\nimport CollapsibleMenuViewDivider from './CollapsibleMenuViewDivider';\\nimport styles from './CollapsibleMenuView.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * Item/ItemGroup/Divider elements to display in the view. Items that will fit in the space available will\\n   * display face-up the remainder will be rolled into a menu\\n   */\\n  children: PropTypes.node.isRequired,\\n\\n  /**\\n   * A string representation of the width in px, limited to:\\n   * 160, 240, 320, 640, 960, 1280, 1760, or auto\\n   */\\n  menuWidth: PropTypes.oneOf(Object.keys(CollapsibleMenuViewItem.Opts.widths)),\\n\\n  /**\\n   * Bounding container for the menu, will use window if no value provided.\\n   */\\n  boundingRef: PropTypes.func,\\n};\\n\\nclass CollapsibleMenuView extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.setContainer = this.setContainer.bind(this);\\n    this.setMenuButton = this.setMenuButton.bind(this);\\n    this.resetCache = this.resetCache.bind(this);\\n    this.handleResize = this.handleResize.bind(this);\\n    this.resetCache();\\n  }\\n\\n  componentDidMount() {\\n    this.resizeObserver = new ResizeObserver((entries) => {\\n      this.contentWidth = entries[0].contentRect.width;\\n      if (!this.isCalculating) {\\n        this.animationFrameID = window.requestAnimationFrame(() => {\\n          // Resetting the cache so that all elements will be rendered face-up for width calculations\\n          this.resetCache();\\n          this.forceUpdate();\\n        });\\n      }\\n    });\\n    this.handleResize(this.contentWidth);\\n    this.resizeObserver.observe(this.container);\\n  }\\n\\n  componentDidUpdate() {\\n    if (this.isCalculating) {\\n      this.isCalculating = false;\\n      this.handleResize(this.contentWidth);\\n    }\\n  }\\n\\n  componentWillUnmount() {\\n    window.cancelAnimationFrame(this.animationFrameID);\\n    this.resizeObserver.disconnect(this.container);\\n    this.container = null;\\n  }\\n\\n  setContainer(node) {\\n    if (node === null) { return; } // Ref callbacks happen on mount and unmount, element will be null on unmount\\n    this.container = node;\\n  }\\n\\n  setMenuButton(node) {\\n    if (node === null) { return; }\\n    this.menuButton = node;\\n  }\\n\\n  resetCache() {\\n    this.animationFrameID = null;\\n    this.hiddenStartIndex = -1;\\n    this.isCalculating = true;\\n    this.menuHidden = false;\\n  }\\n\\n  handleResize(width) {\\n    const menuButtonWidth = this.menuButton.getBoundingClientRect().width;\\n    const availableWidth = width - menuButtonWidth;\\n    let hiddenStartIndex = -1;\\n    let calcWidth = 0;\\n    let menuHidden = true;\\n\\n    for (let i = 0; i < React.Children.count(this.props.children); i += 1) {\\n      const child = this.container.children[i];\\n      const childWidth = child.getBoundingClientRect().width;\\n      calcWidth += childWidth;\\n\\n      if (calcWidth > availableWidth) {\\n        // If last child fits in the available space, leave it face up\\n        if (i === this.props.children.length - 1 && calcWidth <= width) {\\n          break;\\n        }\\n\\n        // If divider is the last element to be hidden on collapse menu, leave it face up\\n        if (React.Children.count(this.props.children) > 1 && this.props.children[i].type === CollapsibleMenuViewDivider) {\\n          hiddenStartIndex = i - 1;\\n        } else {\\n          hiddenStartIndex = i;\\n        }\\n        menuHidden = false;\\n        break;\\n      }\\n    }\\n\\n    if (this.menuHidden !== menuHidden || this.hiddenStartIndex !== hiddenStartIndex) {\\n      this.menuHidden = menuHidden;\\n      this.hiddenStartIndex = hiddenStartIndex;\\n      this.forceUpdate();\\n    }\\n  }\\n\\n  render() {\\n    const {\\n      children, boundingRef, menuWidth, ...customProps\\n    } = this.props;\\n    const visibleChildren = React.Children.toArray(children);\\n\\n    let hiddenChildren = null;\\n    if (this.hiddenStartIndex >= 0) {\\n      hiddenChildren = visibleChildren.splice(this.hiddenStartIndex);\\n    }\\n\\n    const collapsibleMenuViewClassName = cx([\\n      'collapsible-menu-view',\\n      { 'is-calculating': this.isCalculating },\\n      customProps.className,\\n    ]);\\n    const menuButtonClassName = cx([\\n      'menu-button',\\n      { hidden: this.menuHidden },\\n    ]);\\n\\n    return (\\n      <div {...customProps} className={collapsibleMenuViewClassName} ref={this.setContainer}>\\n        {visibleChildren}\\n        <div className={menuButtonClassName} ref={this.setMenuButton}>\\n          <FormattedMessage id=\\\"Terra.collapsibleMenuView.more\\\">\\n            {ellipsesText => (\\n              <CollapsibleMenuViewItem\\n                data-collapsible-menu-toggle\\n                icon={<span className={cx('menu-button-icon')} />}\\n                subMenuItems={hiddenChildren}\\n                boundingRef={boundingRef}\\n                menuWidth={menuWidth}\\n                isIconOnly\\n                text={ellipsesText}\\n                variant=\\\"utility\\\"\\n              />\\n            )}\\n          </FormattedMessage>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nCollapsibleMenuView.Item = CollapsibleMenuViewItem;\\nCollapsibleMenuView.ItemGroup = CollapsibleMenuViewItemGroup;\\nCollapsibleMenuView.Toggle = CollapsibleMenuViewToggle;\\nCollapsibleMenuView.Divider = CollapsibleMenuViewDivider;\\n\\nCollapsibleMenuView.propTypes = propTypes;\\n\\nexport default CollapsibleMenuView;\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames/bind';\\nimport Button from 'terra-button';\\nimport ButtonGroup from 'terra-button-group';\\nimport Menu from './_CollapsibleMenu';\\nimport styles from './CollapsibleMenuView.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * Sets the item's text\\n   */\\n  text: PropTypes.string.isRequired,\\n\\n  /**\\n   * Bounding container for the menu, will use window if no value provided.\\n   */\\n  boundingRef: PropTypes.func,\\n\\n  /**\\n  * An optional icon. Nested inline with the text when provided\\n  */\\n  icon: PropTypes.element,\\n\\n  /**\\n   * Indicates if only the icon should display when item is face-up. (Text should still be given to be displayed when item is in the menu)\\n   */\\n  isIconOnly: PropTypes.bool,\\n\\n  /**\\n  * Reverses the position of the icon and text\\n  */\\n  isReversed: PropTypes.bool,\\n\\n  /**\\n   * Indicates if the item start as selected when placed in a button group\\n   */\\n  isSelected: PropTypes.bool,\\n\\n  /**\\n   * Indicates if the item should be disabled.\\n   */\\n  isDisabled: PropTypes.bool,\\n\\n  /**\\n   * Indicates that clicking on this item while displayed inside a menu should close the menu.\\n   */\\n  shouldCloseOnClick: PropTypes.bool,\\n\\n  /**\\n   * List of Menu.Items to display in a submenu when this item is selected.\\n   */\\n  subMenuItems: PropTypes.arrayOf(PropTypes.element),\\n\\n  /**\\n   * Callback function for when the item is clicked\\n   */\\n  onClick: PropTypes.func,\\n\\n  /**\\n   * A string representation of the width in px, limited to:\\n   * 160, 240, 320, 640, 960, 1280, 1760, or auto\\n   */\\n  menuWidth: PropTypes.oneOf(Object.keys(Menu.Opts.widths)),\\n};\\n\\nconst contextTypes = {\\n  isCollapsibleGroupItem: PropTypes.bool,\\n  isCollapsibleMenuItem: PropTypes.bool,\\n};\\n\\nconst defaultProps = {\\n  isSelected: false,\\n  isReversed: false,\\n  shouldCloseOnClick: true,\\n  isIconOnly: false,\\n};\\n\\nclass CollapsibleMenuViewItem extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.setButtonNode = this.setButtonNode.bind(this);\\n    this.getButtonNode = this.getButtonNode.bind(this);\\n  }\\n\\n  setButtonNode(node) {\\n    this.buttonNode = node;\\n  }\\n\\n  getButtonNode() {\\n    return this.buttonNode;\\n  }\\n\\n  render() {\\n    const {\\n      icon,\\n      isIconOnly,\\n      isReversed,\\n      text,\\n      isSelected,\\n      isDisabled,\\n      subMenuItems,\\n      shouldCloseOnClick,\\n      boundingRef,\\n      menuWidth,\\n      ...customProps\\n    } = this.props;\\n\\n    const { isCollapsibleGroupItem, isCollapsibleMenuItem } = this.context;\\n    const attributes = { ...customProps };\\n    let item;\\n\\n    if (isCollapsibleMenuItem) {\\n      item = (\\n        <Menu.Item\\n          {...attributes}\\n          text={text}\\n          isSelected={isSelected && isCollapsibleGroupItem}\\n          isDisabled={isDisabled}\\n          subMenuItems={subMenuItems}\\n        />\\n      );\\n    } else if (isCollapsibleGroupItem) {\\n      item = (\\n        <ButtonGroup.Button\\n          {...attributes}\\n          icon={icon}\\n          text={text}\\n          isDisabled={isDisabled}\\n        />\\n      );\\n    } else if (subMenuItems && subMenuItems.length > 0) {\\n      item = (\\n        <Menu\\n          contentWidth={menuWidth}\\n          boundingRef={boundingRef}\\n          button={(\\n            <Button\\n              {...attributes}\\n              icon={icon}\\n              text={text}\\n              isReversed={isReversed}\\n              isDisabled={isDisabled}\\n              onClick={this.handleButtonClick}\\n              isIconOnly={isIconOnly}\\n            />\\n          )}\\n        >\\n          {subMenuItems}\\n        </Menu>\\n      );\\n    } else {\\n      item = (\\n        <div className={cx('face-up-item')}>\\n          <Button\\n            {...attributes}\\n            icon={icon}\\n            text={text}\\n            isReversed={isReversed}\\n            isDisabled={isDisabled}\\n            isIconOnly={isIconOnly}\\n          />\\n        </div>\\n      );\\n    }\\n\\n    return item;\\n  }\\n}\\n\\nCollapsibleMenuViewItem.propTypes = propTypes;\\nCollapsibleMenuViewItem.defaultProps = defaultProps;\\nCollapsibleMenuViewItem.contextTypes = contextTypes;\\nCollapsibleMenuViewItem.Opts = {\\n  widths: Menu.Opts.widths,\\n};\\n\\nexport default CollapsibleMenuViewItem;\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames/bind';\\nimport ButtonGroup from 'terra-button-group';\\nimport Menu from './_CollapsibleMenu';\\nimport styles from './CollapsibleMenuView.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * Callback function that is called when the group's selection state changes\\n   */\\n  onChange: PropTypes.func,\\n  /**\\n   * CollapsibleMenuView.Items to be grouped together\\n   */\\n  children: PropTypes.node.isRequired,\\n  /**\\n   * A list of keys of the CollapsibleMenuView.Items that should be selected.\\n   */\\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\\n};\\n\\nconst defaultProps = {\\n  selectedKeys: [],\\n};\\n\\nconst childContextTypes = {\\n  isCollapsibleGroupItem: PropTypes.bool,\\n};\\n\\nconst contextTypes = {\\n  isCollapsibleMenuItem: PropTypes.bool,\\n};\\n\\nclass CollapsibleMenuViewItemGroup extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleOnChange = this.handleOnChange.bind(this);\\n  }\\n\\n  getChildContext() {\\n    return { isCollapsibleGroupItem: true };\\n  }\\n\\n  handleOnChange(event, selectedIndex) {\\n    if (this.props.onChange) {\\n      let selectedKey = selectedIndex;\\n      React.Children.forEach(this.props.children, (child, index) => {\\n        if (selectedIndex === index) {\\n          selectedKey = child.key;\\n        }\\n      });\\n\\n      this.props.onChange(event, selectedKey);\\n    }\\n  }\\n\\n  render() {\\n    const {\\n      children,\\n      onChange,\\n      selectedKeys,\\n      ...customProps\\n    } = this.props;\\n\\n    const { isCollapsibleMenuItem } = this.context;\\n\\n    if (isCollapsibleMenuItem && selectedKeys.length) {\\n      return (\\n        <li role=\\\"none\\\">\\n          <Menu.ItemGroup {...customProps} onChange={this.handleOnChange}>\\n            {children}\\n          </Menu.ItemGroup>\\n        </li>\\n      );\\n    } if (isCollapsibleMenuItem) {\\n      return (\\n        <div {...customProps}>\\n          { children }\\n        </div>\\n      );\\n    }\\n\\n    const buttonGroupClassNames = cx([\\n      'face-up-item',\\n      customProps.className,\\n    ]);\\n\\n    return (\\n      <ButtonGroup {...customProps} onChange={onChange} className={buttonGroupClassNames} selectedKeys={selectedKeys}>\\n        {children}\\n      </ButtonGroup>\\n    );\\n  }\\n}\\n\\nCollapsibleMenuViewItemGroup.propTypes = propTypes;\\nCollapsibleMenuViewItemGroup.defaultProps = defaultProps;\\nCollapsibleMenuViewItemGroup.childContextTypes = childContextTypes;\\nCollapsibleMenuViewItemGroup.contextTypes = contextTypes;\\n\\nexport default CollapsibleMenuViewItemGroup;\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames/bind';\\nimport Checkbox from 'terra-form-checkbox';\\nimport Menu from './_CollapsibleMenu';\\nimport styles from './CollapsibleMenuView.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * Sets the item's text\\n   */\\n  text: PropTypes.string.isRequired,\\n  /**\\n   * Indicates if the item is selected.\\n   */\\n  isSelected: PropTypes.bool,\\n  /**\\n   * Callback function for when selection state changes. Is called with event and isSelected parameters\\n   */\\n  onChange: PropTypes.func,\\n  /**\\n   *  Indicates that the toggle should be selectable\\n   */\\n  isSelectable: PropTypes.bool,\\n  /**\\n   * Indicates if the toggle should be disabled.\\n   */\\n  isDisabled: PropTypes.bool,\\n  /**\\n   * Indicates that clicking on this item while displayed inside a menu should close the menu\\n   */\\n  shouldCloseOnClick: PropTypes.bool,\\n};\\n\\nconst contextTypes = {\\n  isCollapsibleMenuItem: PropTypes.bool,\\n};\\n\\nconst defaultProps = {\\n  isSelected: false,\\n  isSelectable: true,\\n  shouldCloseOnClick: true,\\n};\\n\\nclass CollapsibleMenuViewToggle extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.wrappedOnChange = this.wrappedOnChange.bind(this);\\n  }\\n\\n  // Wrapping onChange event so that the same parameters will be given when the display is a checkbox and a menu.item\\n  wrappedOnChange(event) {\\n    if (this.props.onChange) {\\n      this.props.onChange(event, event.target.checked);\\n    }\\n  }\\n\\n  render() {\\n    const {\\n      text,\\n      isSelected,\\n      isSelectable,\\n      isDisabled,\\n      onChange,\\n      shouldCloseOnClick,\\n      ...customProps\\n    } = this.props;\\n\\n    const { isCollapsibleMenuItem } = this.context;\\n    const controllClassName = cx([\\n      'control',\\n      { 'is-disabled': isDisabled || !isSelectable },\\n      customProps.className,\\n    ]);\\n\\n    if (isCollapsibleMenuItem) {\\n      return (\\n        <Menu.Item\\n          {...customProps}\\n          text={text}\\n          isSelected={isSelected}\\n          isSelectable={isSelectable}\\n          isDisabled={isDisabled}\\n          onChange={onChange}\\n        />\\n      );\\n    }\\n\\n    return (\\n      <div className={cx(['face-up-item'])}>\\n        <Checkbox\\n          {...customProps}\\n          className={controllClassName}\\n          labelText={text}\\n          defaultChecked={isSelected}\\n          onChange={this.wrappedOnChange}\\n          disabled={isDisabled || !isSelectable}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nCollapsibleMenuViewToggle.propTypes = propTypes;\\nCollapsibleMenuViewToggle.defaultProps = defaultProps;\\nCollapsibleMenuViewToggle.contextTypes = contextTypes;\\n\\nexport default CollapsibleMenuViewToggle;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconTable = _interopRequireDefault(require(\"terra-icon/lib/icon/IconTable\"));\n\nvar _IconFlowsheet = _interopRequireDefault(require(\"terra-icon/lib/icon/IconFlowsheet\"));\n\nvar _IconVisualization = _interopRequireDefault(require(\"terra-icon/lib/icon/IconVisualization\"));\n\nvar _IconSend = _interopRequireDefault(require(\"terra-icon/lib/icon/IconSend\"));\n\nvar _IconPrinter = _interopRequireDefault(require(\"terra-icon/lib/icon/IconPrinter\"));\n\nvar _IconFolder = _interopRequireDefault(require(\"terra-icon/lib/icon/IconFolder\"));\n\nvar _IconTrash = _interopRequireDefault(require(\"terra-icon/lib/icon/IconTrash\"));\n\nvar _terraCollapsibleMenuView = _interopRequireDefault(require(\"terra-collapsible-menu-view\"));\n\nvar CollapsibleMenuViewDemo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(CollapsibleMenuViewDemo, _React$Component);\n\n  function CollapsibleMenuViewDemo(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CollapsibleMenuViewDemo);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CollapsibleMenuViewDemo).call(this, props));\n    _this.handleDisplayTypeChange = _this.handleDisplayTypeChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleToggleOneOnChange = _this.handleToggleOneOnChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleToggleTwoOnChange = _this.handleToggleTwoOnChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      toggle1Selection: false,\n      toggle2Selection: false,\n      displayType: 'tableView'\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(CollapsibleMenuViewDemo, [{\n    key: \"handleToggleOneOnChange\",\n    value: function handleToggleOneOnChange(event, isSelected) {\n      this.setState({\n        toggle1Selection: isSelected\n      });\n    }\n  }, {\n    key: \"handleToggleTwoOnChange\",\n    value: function handleToggleTwoOnChange(event, isSelected) {\n      this.setState({\n        toggle2Selection: isSelected\n      });\n    }\n  }, {\n    key: \"handleDisplayTypeChange\",\n    value: function handleDisplayTypeChange(event, selectedKey) {\n      this.setState({\n        displayType: selectedKey\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_terraCollapsibleMenuView.default, null, _react.default.createElement(_terraCollapsibleMenuView.default.Toggle, {\n        text: \"Toggle Item 1\",\n        key: \"toggle1\",\n        shouldCloseOnClick: false,\n        onChange: this.handleToggleOneOnChange,\n        isSelected: this.state.toggle1Selection,\n        isSelectable: false\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Toggle, {\n        text: \"Toggle Item 2\",\n        key: \"toggle2\",\n        shouldCloseOnClick: false,\n        onChange: this.handleToggleTwoOnChange,\n        isSelected: this.state.toggle2Selection,\n        isDisabled: true\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Divider, {\n        key: \"Divider1\"\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        text: \"Menu Button 1\",\n        key: \"MenuButton1\",\n        shouldCloseOnClick: false,\n        subMenuItems: [_react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n          text: \"Default Item 1\",\n          key: \"defaultItem1\"\n        }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n          text: \"Default Item 2\",\n          key: \"defaultItem2\"\n        })]\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        text: \"Menu Button 2\",\n        key: \"MenuButton 2\",\n        isDisabled: true,\n        shouldCloseOnClick: false,\n        subMenuItems: [_react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n          text: \"Default Item 1\",\n          key: \"defaultItem1\"\n        }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n          text: \"Default Item 2\",\n          key: \"defaultItem2\",\n          isDisabled: true\n        })]\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Divider, {\n        key: \"Divider2\"\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.ItemGroup, {\n        key: \"ViewTypeSelection\",\n        selectedKeys: [this.state.displayType],\n        onChange: this.handleDisplayTypeChange\n      }, _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconTable.default, null),\n        text: \"Table View\",\n        key: \"tableView\",\n        isIconOnly: true,\n        shouldCloseOnClick: false,\n        isSelected: this.state.displayType === 'tableView'\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconFlowsheet.default, null),\n        text: \"Expanded View\",\n        key: \"expandedView\",\n        isIconOnly: true,\n        shouldCloseOnClick: false,\n        isSelected: this.state.displayType === 'expandedView'\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconVisualization.default, null),\n        text: \"Trending View\",\n        key: \"trendingView\",\n        isIconOnly: true,\n        shouldCloseOnClick: false,\n        isSelected: this.state.displayType === 'trendingView',\n        isDisabled: true\n      })), _react.default.createElement(_terraCollapsibleMenuView.default.Divider, {\n        key: \"Divider3\"\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconSend.default, null),\n        text: \"Send Message\",\n        key: \"send\",\n        isIconOnly: true\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.ItemGroup, {\n        key: \"messageActionGroup\"\n      }, _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconPrinter.default, null),\n        text: \"Print Message\",\n        key: \"print\",\n        isIconOnly: true\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconFolder.default, null),\n        text: \"Move Message to Folder...\",\n        key: \"move\",\n        isIconOnly: true,\n        isDisabled: true\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconTrash.default, null),\n        text: \"Trash Message\",\n        key: \"trash\",\n        isIconOnly: true\n      })), _react.default.createElement(_terraCollapsibleMenuView.default.Divider, {\n        key: \"Divider4\"\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        text: \"Button 1\",\n        key: \"button1\"\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        text: \"Button 2\",\n        key: \"button2\",\n        isDisabled: true\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        text: \"Button 3\",\n        key: \"button3\"\n      }), _react.default.createElement(_terraCollapsibleMenuView.default.Item, {\n        text: \"Button 4\",\n        key: \"button4\"\n      }));\n    }\n  }]);\n  return CollapsibleMenuViewDemo;\n}(_react.default.Component);\n\nvar _default = CollapsibleMenuViewDemo;\nexports.default = _default;","export default \"import React from 'react';\\nimport IconTable from 'terra-icon/lib/icon/IconTable';\\nimport IconFlowsheet from 'terra-icon/lib/icon/IconFlowsheet';\\nimport IconVisualization from 'terra-icon/lib/icon/IconVisualization';\\nimport IconSend from 'terra-icon/lib/icon/IconSend';\\nimport IconPrinter from 'terra-icon/lib/icon/IconPrinter';\\nimport IconFolder from 'terra-icon/lib/icon/IconFolder';\\nimport IconTrash from 'terra-icon/lib/icon/IconTrash';\\nimport CollapsibleMenuView from 'terra-collapsible-menu-view';\\n\\nclass CollapsibleMenuViewDemo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleDisplayTypeChange = this.handleDisplayTypeChange.bind(this);\\n    this.handleToggleOneOnChange = this.handleToggleOneOnChange.bind(this);\\n    this.handleToggleTwoOnChange = this.handleToggleTwoOnChange.bind(this);\\n    this.state = {\\n      toggle1Selection: false,\\n      toggle2Selection: false,\\n      displayType: 'tableView',\\n    };\\n  }\\n\\n  handleToggleOneOnChange(event, isSelected) {\\n    this.setState({ toggle1Selection: isSelected });\\n  }\\n\\n  handleToggleTwoOnChange(event, isSelected) {\\n    this.setState({ toggle2Selection: isSelected });\\n  }\\n\\n  handleDisplayTypeChange(event, selectedKey) {\\n    this.setState({ displayType: selectedKey });\\n  }\\n\\n  render() {\\n    return (\\n      <CollapsibleMenuView>\\n        <CollapsibleMenuView.Toggle\\n          text=\\\"Toggle Item 1\\\"\\n          key=\\\"toggle1\\\"\\n          shouldCloseOnClick={false}\\n          onChange={this.handleToggleOneOnChange}\\n          isSelected={this.state.toggle1Selection}\\n          isSelectable={false}\\n        />\\n        <CollapsibleMenuView.Toggle\\n          text=\\\"Toggle Item 2\\\"\\n          key=\\\"toggle2\\\"\\n          shouldCloseOnClick={false}\\n          onChange={this.handleToggleTwoOnChange}\\n          isSelected={this.state.toggle2Selection}\\n          isDisabled\\n        />\\n        <CollapsibleMenuView.Divider key=\\\"Divider1\\\" />\\n        <CollapsibleMenuView.Item\\n          text=\\\"Menu Button 1\\\"\\n          key=\\\"MenuButton1\\\"\\n          shouldCloseOnClick={false}\\n          subMenuItems={[\\n            <CollapsibleMenuView.Item text=\\\"Default Item 1\\\" key=\\\"defaultItem1\\\" />,\\n            <CollapsibleMenuView.Item text=\\\"Default Item 2\\\" key=\\\"defaultItem2\\\" />,\\n          ]}\\n        />\\n        <CollapsibleMenuView.Item\\n          text=\\\"Menu Button 2\\\"\\n          key=\\\"MenuButton 2\\\"\\n          isDisabled\\n          shouldCloseOnClick={false}\\n          subMenuItems={[\\n            <CollapsibleMenuView.Item text=\\\"Default Item 1\\\" key=\\\"defaultItem1\\\" />,\\n            <CollapsibleMenuView.Item text=\\\"Default Item 2\\\" key=\\\"defaultItem2\\\" isDisabled />,\\n          ]}\\n        />\\n        <CollapsibleMenuView.Divider key=\\\"Divider2\\\" />\\n        <CollapsibleMenuView.ItemGroup key=\\\"ViewTypeSelection\\\" selectedKeys={[this.state.displayType]} onChange={this.handleDisplayTypeChange}>\\n          <CollapsibleMenuView.Item\\n            icon={<IconTable />}\\n            text=\\\"Table View\\\"\\n            key=\\\"tableView\\\"\\n            isIconOnly\\n            shouldCloseOnClick={false}\\n            isSelected={this.state.displayType === 'tableView'}\\n          />\\n          <CollapsibleMenuView.Item\\n            icon={<IconFlowsheet />}\\n            text=\\\"Expanded View\\\"\\n            key=\\\"expandedView\\\"\\n            isIconOnly\\n            shouldCloseOnClick={false}\\n            isSelected={this.state.displayType === 'expandedView'}\\n          />\\n          <CollapsibleMenuView.Item\\n            icon={<IconVisualization />}\\n            text=\\\"Trending View\\\"\\n            key=\\\"trendingView\\\"\\n            isIconOnly\\n            shouldCloseOnClick={false}\\n            isSelected={this.state.displayType === 'trendingView'}\\n            isDisabled\\n          />\\n        </CollapsibleMenuView.ItemGroup>\\n        <CollapsibleMenuView.Divider key=\\\"Divider3\\\" />\\n        <CollapsibleMenuView.Item icon={<IconSend />} text=\\\"Send Message\\\" key=\\\"send\\\" isIconOnly />\\n        <CollapsibleMenuView.ItemGroup key=\\\"messageActionGroup\\\">\\n          <CollapsibleMenuView.Item icon={<IconPrinter />} text=\\\"Print Message\\\" key=\\\"print\\\" isIconOnly />\\n          <CollapsibleMenuView.Item icon={<IconFolder />} text=\\\"Move Message to Folder...\\\" key=\\\"move\\\" isIconOnly isDisabled />\\n          <CollapsibleMenuView.Item icon={<IconTrash />} text=\\\"Trash Message\\\" key=\\\"trash\\\" isIconOnly />\\n        </CollapsibleMenuView.ItemGroup>\\n        <CollapsibleMenuView.Divider key=\\\"Divider4\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 1\\\" key=\\\"button1\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 2\\\" key=\\\"button2\\\" isDisabled />\\n        <CollapsibleMenuView.Item text=\\\"Button 3\\\" key=\\\"button3\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 4\\\" key=\\\"button4\\\" />\\n      </CollapsibleMenuView>\\n    );\\n  }\\n}\\n\\nexport default CollapsibleMenuViewDemo;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _README = _interopRequireDefault(require(\"../../../../docs/README.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _CollapsibleMenuView = _interopRequireDefault(require(\"!raw-loader!../../../../src/CollapsibleMenuView\"));\n\nvar _CollapsibleMenuViewItem = _interopRequireDefault(require(\"!raw-loader!../../../../src/CollapsibleMenuViewItem\"));\n\nvar _CollapsibleMenuViewItemGroup = _interopRequireDefault(require(\"!raw-loader!../../../../src/CollapsibleMenuViewItemGroup\"));\n\nvar _CollapsibleMenuViewToggle = _interopRequireDefault(require(\"!raw-loader!../../../../src/CollapsibleMenuViewToggle\"));\n\nvar _CollapsibleMenuViewDemo = _interopRequireDefault(require(\"../example/CollapsibleMenuViewDemo\"));\n\nvar _CollapsibleMenuViewDemo2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/CollapsibleMenuViewDemo\"));\n\n// Component Source\n// Example Files\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _README.default,\n    srcPath: \"https://github.com/cerner/terra-framework/tree/master/packages/\".concat(_package.name),\n    examples: [{\n      title: 'CollapsibleMenuView Example',\n      example: _react.default.createElement(_CollapsibleMenuViewDemo.default, null),\n      source: _CollapsibleMenuViewDemo2.default\n    }],\n    propsTables: [{\n      componentName: 'CollapsibleMenuView',\n      componentSrc: _CollapsibleMenuView.default\n    }, {\n      componentName: 'CollapsibleMenuView.Item',\n      componentSrc: _CollapsibleMenuViewItem.default\n    }, {\n      componentName: 'CollapsibleMenuView.ItemGroup',\n      componentSrc: _CollapsibleMenuViewItemGroup.default\n    }, {\n      componentName: 'CollapsibleMenuView.Toggle',\n      componentSrc: _CollapsibleMenuViewToggle.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;"],"sourceRoot":""}