{"version":3,"sources":["webpack:///./node_modules/terra-dev-site/lib/loader-components/_NpmBadge.js","webpack:///./node_modules/terra-dev-site/lib/loader-components/NpmBadge.module.scss?e15d","webpack:///./packages/terra-modal-manager/package.json","webpack:///./packages/terra-modal-manager/lib/terra-dev-site/doc/modal-manager/UpgradeGuide.3.doc.mdx"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","_propTypes","_bind","_NpmBadgeModule","obj","__esModule","cx","bind","propTypes","name","string","isRequired","url","version","NpmBadge","_ref","createElement","className","href","concat","_default","module","Badge","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"233-487e6f10d0a190bf7711.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _NpmBadgeModule = _interopRequireDefault(require(\"./NpmBadge.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cx = _bind.default.bind(_NpmBadgeModule.default);\n\nvar propTypes = {\n  /**\n   * component name.\n   */\n  name: _propTypes.default.string.isRequired,\n\n  /**\n   * url to link to\n   */\n  url: _propTypes.default.string,\n\n  /**\n   * The package version.\n   */\n  version: _propTypes.default.string.isRequired\n};\n\nvar NpmBadge = function NpmBadge(_ref) {\n  var name = _ref.name,\n      url = _ref.url,\n      version = _ref.version;\n  return _react.default.createElement(\"div\", {\n    className: cx('badge-container')\n  }, _react.default.createElement(\"a\", {\n    className: cx('badge'),\n    href: url || \"https://www.npmjs.org/package/\".concat(name, \"/v/\").concat(version)\n  }, _react.default.createElement(\"span\", {\n    className: cx('badge-name')\n  }, url ? 'package' : 'npm'), _react.default.createElement(\"span\", {\n    className: cx('badge-version')\n  }, \"v\".concat(version))));\n};\n\nNpmBadge.propTypes = propTypes;\nvar _default = NpmBadge;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"NpmBadge-module__badge___3p041\",\"badge-container\":\"NpmBadge-module__badge-container___2W9ft\",\"badge-name\":\"NpmBadge-module__badge-name___2TNAy\",\"badge-version\":\"NpmBadge-module__badge-version___3bRIz\"};","import React from 'react';\nimport NpmBadge from 'terra-dev-site/lib/loader-components/_NpmBadge';\n\nexport const Badge = ({ url }) => (\n      <NpmBadge\n        name=\"terra-modal-manager\"\n        version=\"6.25.0\"\n        url={url}\n      />\n    );","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Badge } from 'terra-modal-manager/package.json?dev-site-package';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Badge mdxType=\"Badge\" />\n    <h1 {...{\n      \"id\": \"terra-modal-manager---upgrade-guide\"\n    }}>{`Terra Modal Manager - Upgrade Guide`}</h1>\n    <h2 {...{\n      \"id\": \"upgrading-from-v3x-to-v4x\"\n    }}>{`Upgrading from v3.x to v4.x`}</h2>\n    <p>{`With the release of terra-disclosure-manager v3.x, the ModalManager now provides its APIs through context instead of prop injection. Please view the terra-disclosure-manager documentation/upgrade guide for more information. `}</p>\n    <p>{`The below example code details the changes necessary to interact with terra-modal-manager v4.x.`}</p>\n    <pre {...{\n      \"className\": \"language-diff\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`/**\n`}<span parentName=\"code\" {...{\n          \"className\": \"token unchanged\"\n        }}>{` * v3.x to v4.x\n */\n import Base from 'terra-base';\n import ModalManager from 'terra-modal-manager'; \n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token deleted-sign deleted\"\n        }}>{`- import AppDelegate from 'terra-app-delegate';\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token inserted-sign inserted\"\n        }}>{`+ import { withDisclosureManager, disclosureManagerShape } from 'terra-disclosure-manager';\n`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"token deleted-sign deleted\"\n        }}>{`- const MyDisclosureComponent = ({ app }) => (\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token inserted-sign inserted\"\n        }}>{`+ const MyDisclosureComponent = withDisclosureManager(({ disclosureManager }) => (\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token unchanged\"\n        }}>{`   <Button\n     text=\"Close Modal\"\n     onClick={() => { \n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token deleted-sign deleted\"\n        }}>{`-      app.closeDisclosure();\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token inserted-sign inserted\"\n        }}>{`+      disclosureManager.closeDisclosure();\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token unchanged\"\n        }}>{`     }}\n   />\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token deleted-sign deleted\"\n        }}>{`- );\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token inserted-sign inserted\"\n        }}>{`+ ));\n`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"token unchanged\"\n        }}>{` MyDisclosureComponent.propType = {\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token deleted-sign deleted\"\n        }}>{`-   app: AppDelegate.propType,\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token inserted-sign inserted\"\n        }}>{`+   disclosureManager: disclosureManagerShape,\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token unchanged\"\n        }}>{` };\n`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"token deleted-sign deleted\"\n        }}>{`- const MyComponent = ({ app }) => (\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token inserted-sign inserted\"\n        }}>{`+ const MyComponent = withDisclosureManager(({ disclosureManager }) => (\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token unchanged\"\n        }}>{`    <Button\n      text=\"Launch Modal\"\n      onClick={() => { \n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token deleted-sign deleted\"\n        }}>{`-       app.disclose({\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token inserted-sign inserted\"\n        }}>{`+       disclosureManager.disclose({\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token unchanged\"\n        }}>{`          preferredType: 'modal',\n          content: {\n            key: 'MY-MODAL-DISCLOSURE',\n            component: <MyDisclosureComponent />,\n          }\n        });\n      }}\n   />\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token deleted-sign deleted\"\n        }}>{`- );\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token inserted-sign inserted\"\n        }}>{`+ ));\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token unchanged\"\n        }}>{` \n MyComponent.propType = {\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token deleted-sign deleted\"\n        }}>{`-   app: AppDelegate.propType,\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token inserted-sign inserted\"\n        }}>{`+   disclosureManager: disclosureManagerShape,\n`}</span><span parentName=\"code\" {...{\n          \"className\": \"token unchanged\"\n        }}>{` };\n`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"token unchanged\"\n        }}>{` const MyApp = () => (\n   <Base locale=\"en\">\n     <ModalManager>\n       <MyComponent />\n     </ModalManager>\n   </Base>\n );\n`}</span></code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}